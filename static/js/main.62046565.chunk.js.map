{"version":3,"sources":["components/card/card.component.js","components/card-list/card-list.component.js","components/search-box/search.box.component.js","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","alt","src","id","name","email","CardList","props","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","useState","setMonsters","search","setSearch","initialValues","Object","values","join","fetchData","a","fetch","then","response","json","users","useEffect","console","log","filteredMonsters","filter","toLowerCase","includes","term","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2UAEaA,EAAO,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACrB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,UACJC,IAAG,+BAA0BH,EAAQI,GAAlC,4BAEL,6BAAKJ,EAAQK,OACb,4BAAIL,EAAQM,YCPLC,EAAW,SAACC,GACvB,OACE,qBAAKP,UAAU,YAAf,SACGO,EAAMC,SAASC,KAAI,SAACV,GACnB,OAAO,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQI,UCLrBO,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACvC,OACE,8BACE,uBACEC,KAAK,SACLb,UAAU,SACVW,YAAaA,EAEbG,SAAUF,QCmCHG,MAxCf,WAAgB,IAAD,EACmBC,mBAAS,IAD5B,mBACNR,EADM,KACIS,EADJ,OAEeD,mBAAS,IAFxB,mBAENE,EAFM,KAEEC,EAFF,KAIPC,EAAgBC,OAAOC,OAAOd,GAAUe,KAAK,IAG7CC,EAAS,uCAAG,sBAAAC,EAAA,sDAChBC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAWb,GAAY,kBAAMa,QAHrB,2CAAH,qDAMfC,qBAAU,WACRP,IACAQ,QAAQC,IAAIzB,KACX,CAACY,IAEJY,QAAQC,IAAI,WAAYf,GAExB,IAAMgB,EAAmB1B,EAAS2B,QAAO,SAACpC,GAAD,OACvCA,EAAQK,KAAKgC,cAAcC,SAASnB,EAAOkB,kBAK7C,OAFAJ,QAAQC,IAAI,SAAUC,GAGpB,mCACE,sBAAKlC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAc,SAAC0B,GAAD,OAAUnB,EAAUmB,EAAKC,OAAOC,UAEhD,cAAC,EAAD,CAAUhC,SAAU0B,UC3BbO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.62046565.chunk.js","sourcesContent":["import './card.styles.css';\n\nexport const Card = ({ monster }) => {\n  return (\n    <div className=\"card-container\">\n      <img\n        alt=\"monster\"\n        src={`https://robohash.org/${monster.id}?set=set2&size=180x180`}\n      />\n      <h1>{monster.name}</h1>\n      <p>{monster.email}</p>\n    </div>\n  );\n};\n","import './card-list.styles.css';\nimport { Card } from '../card/card.component';\n\nexport const CardList = (props) => {\n  return (\n    <div className=\"card-list\">\n      {props.monsters.map((monster) => {\n        return <Card key={monster.id} monster={monster} />;\n      })}\n    </div>\n  );\n};\n","import './search-box.styles.css';\n\nexport const SearchBox = ({ placeholder, handleChange }) => {\n  return (\n    <div>\n      <input\n        type=\"search\"\n        className=\"search\"\n        placeholder={placeholder}\n        // value={search}\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n","import './App.css';\nimport { useState, useEffect } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search.box.component';\n\nfunction App() {\n  const [monsters, setMonsters] = useState([]);\n  const [search, setSearch] = useState('');\n\n  const initialValues = Object.values(monsters).join('');\n  // above from Wes Bos\n\n  const fetchData = async () => {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response) => response.json())\n      .then((users) => setMonsters(() => users));\n  };\n\n  useEffect(() => {\n    fetchData();\n    console.log(monsters);\n  }, [initialValues]);\n\n  console.log('search: ', search);\n\n  const filteredMonsters = monsters.filter((monster) =>\n    monster.name.toLowerCase().includes(search.toLowerCase())\n  );\n\n  console.log('filter', filteredMonsters);\n\n  return (\n    <>\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder=\"search monsters\"\n          handleChange={(term) => setSearch(term.target.value)}\n        />\n        <CardList monsters={filteredMonsters}></CardList>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n\n// const users = await (\n//   await fetch('https://jsonplaceholder.typicode.com/users')\n// ).json();\n// setMonsters(() => users);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}